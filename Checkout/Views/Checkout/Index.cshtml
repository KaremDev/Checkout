
@{
    Layout = null;
}
@model Checkout_Test.Models.PaymentModel

@using Checkout_Test.Models

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="https://cdn.checkout.com/js/frames.js"></script>
    <h2>Sample Application</h2>

    <h4>New payment</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            @using (@Html.BeginForm("post", "Checkout", FormMethod.Post, new { id = "payment-form"
            }))
            {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary()
            @Html.HiddenFor(m => m.CardToken)
            <div class="form-group">
                @Html.LabelFor(m => m.Amount)
                @Html.TextBoxFor(m => m.Amount, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Amount, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Currency)
                @Html.DropDownListFor(m => m.Currency, Model.Currencies, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Currency, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Reference)
                @Html.TextBoxFor(m => m.Reference, new { @class = "form-control" })
            </div>
            <div class="form-group form-check">
                @Html.CheckBoxFor(m => m.DoThreeDS)
                @Html.LabelFor(m => m.DoThreeDS)
            </div>
            <div class="form-group form-check">
                @Html.CheckBoxFor(m => m.Capture)
                @Html.LabelFor(m => m.Capture)
            </div>
            <div class="frames-container form-group"></div>
            <div class="form-group">
                <button id="pay-now-button" type="submit" class="btn btn-primary" disabled>Pay now</button>
            </div>
            }
        </div>
    </div>
    <script>
    var paymentForm = document.getElementById('payment-form');
    var payNowButton = document.getElementById('pay-now-button');

        Frames.init({
            publicKey: '@Configration.Create().Pk',
        containerSelector: '.frames-container',
        debugMode: true,
        cardValidationChanged: function () {
            debugger;
            payNowButton.disabled = !Frames.isCardValid();
        },
        cardSubmitted: function () {
            payNowButton.disabled = true;
        },
        cardTokenised: function (event) {
            debugger;
            var cardToken = event.data.cardToken;
            $('#CardToken').val(cardToken);
            Frames.addCardToken(paymentForm, cardToken);
            paymentForm.submit();
        },
        cardTokenisationFailed: function (event) {
        }
    });
    paymentForm.addEventListener('submit', function (event) {
        event.preventDefault();
        Frames.submitCard();
    });
    </script>
</body>
</html>
